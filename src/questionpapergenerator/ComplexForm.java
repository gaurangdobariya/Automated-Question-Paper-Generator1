/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package questionpapergenerator;

import com.itextpdf.text.*;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.sql.*;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import org.icepdf.ri.common.ComponentKeyBinding;
import org.icepdf.ri.common.SwingController;
import org.icepdf.ri.common.SwingViewBuilder;

/**
 *
 * @author ASUS
 */
public class ComplexForm extends javax.swing.JFrame {

    /**
     * Creates new form ComplexForm
     */
    public static int randInt(int min, int max) {

    // Usually this can be a field rather than a method variable
    Random rand = new Random();

    // nextInt is normally exclusive of the top value,
    // so add 1 to make it inclusive
    int randomNum = rand.nextInt((max - min) + 1) + min;

    return randomNum;
}
    String extype="",subj="",sub_code="",t_h="",output="";
    int zer1=0,zer2=0,zer3=0;
    int cmpp1=0,cmpp2=0,cmpp3=0;
    public ComplexForm(String extype,String subj,String sub_code,String t_h,String output) {
        this.extype=extype;
        this.sub_code=sub_code;
        this.t_h=t_h;
        this.output=output;
        this.subj=subj;
         initComponents();
            this.setLocationRelativeTo(null);
        Image icx = new ImageIcon(getClass().getResource("/resources/question_mark-icon.jpg")).getImage();
        this.setIconImage(icx);
        this.setTitle("Question Paper Generator");
        try {
UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
SwingUtilities.updateComponentTreeUI(this);
} catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException exception) {
JOptionPane.showMessageDialog (
this, "Can't change look and feel",
"Invalid PLAF", JOptionPane.ERROR_MESSAGE);
}
    }

    private ComplexForm() {
        throw new UnsupportedOperationException("Not yet implemented");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txthpq1 = new javax.swing.JTextField();
        txtmpq1 = new javax.swing.JTextField();
        txtlpq1 = new javax.swing.JTextField();
        jspaneq13 = new javax.swing.JScrollPane();
        btnSubmitq1 = new javax.swing.JButton();
        txttotq1 = new javax.swing.JTextField();
        cmp1 = new javax.swing.JTextField();
        Opt1 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txthpq2 = new javax.swing.JTextField();
        txtmpq2 = new javax.swing.JTextField();
        txtlpq2 = new javax.swing.JTextField();
        btnSubmitq2 = new javax.swing.JButton();
        txttotq2 = new javax.swing.JTextField();
        jspaneq23 = new javax.swing.JScrollPane();
        cmp2 = new javax.swing.JTextField();
        Opt2 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txthpq3 = new javax.swing.JTextField();
        txtmpq3 = new javax.swing.JTextField();
        txtlpq3 = new javax.swing.JTextField();
        btnSubmitq3 = new javax.swing.JButton();
        txttotq3 = new javax.swing.JTextField();
        cmdgenqb = new javax.swing.JButton();
        cmp3 = new javax.swing.JTextField();
        Opt3 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jspaneq33 = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel1.setText("High Priority");

        jLabel2.setText("Medium Priority");

        jLabel3.setText("Low Priority");

        txthpq1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txthpq1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txthpq1FocusLost(evt);
            }
        });
        txthpq1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txthpq1InputMethodTextChanged(evt);
            }
        });

        txtmpq1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtmpq1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtmpq1FocusLost(evt);
            }
        });
        txtmpq1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmpq1ActionPerformed(evt);
            }
        });

        txtlpq1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtlpq1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtlpq1FocusLost(evt);
            }
        });
        txtlpq1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtlpq1ActionPerformed(evt);
            }
        });

        btnSubmitq1.setText("Submit...");
        btnSubmitq1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitq1ActionPerformed(evt);
            }
        });

        txttotq1.setEditable(false);

        cmp1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmp1FocusLost(evt);
            }
        });

        Opt1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                Opt1FocusLost(evt);
            }
        });
        Opt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Opt1ActionPerformed(evt);
            }
        });

        jLabel10.setText("Compulsory");

        jLabel11.setText("Optional");

        jLabel12.setText("Total");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/back.jpg"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/home.jpg"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel19.setText("Question:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                        .addComponent(txttotq1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSubmitq1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel10))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txthpq1)
                            .addComponent(txtmpq1)
                            .addComponent(txtlpq1, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(cmp1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Opt1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(72, 72, 72)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jspaneq13, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35))
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(32, 32, 32))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(txthpq1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtmpq1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtlpq1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(cmp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Opt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnSubmitq1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txttotq1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jspaneq13, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(99, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Q NO 1", jPanel1);

        jLabel4.setText("High Priority");

        jLabel5.setText("Medium Priority");

        jLabel6.setText("Low Priority");

        txthpq2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txthpq2FocusLost(evt);
            }
        });

        txtmpq2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtmpq2FocusLost(evt);
            }
        });

        txtlpq2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtlpq2FocusLost(evt);
            }
        });

        btnSubmitq2.setText("Submit...");
        btnSubmitq2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitq2ActionPerformed(evt);
            }
        });

        txttotq2.setEditable(false);

        cmp2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmp2FocusLost(evt);
            }
        });

        Opt2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                Opt2FocusLost(evt);
            }
        });

        jLabel13.setText("Compulsory");

        jLabel14.setText("Optional");

        jLabel15.setText("Total");

        jLabel20.setText("Question:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnSubmitq2, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txttotq2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtmpq2, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                            .addComponent(txthpq2, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                            .addComponent(txtlpq2, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                            .addComponent(Opt2)
                            .addComponent(cmp2))))
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(jspaneq23, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jspaneq23, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txthpq2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtmpq2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtlpq2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Opt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(btnSubmitq2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txttotq2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))))
                .addGap(122, 122, 122))
        );

        jTabbedPane1.addTab("Q NO 2", jPanel2);

        jLabel7.setText("High Priority");

        jLabel8.setText("Medium Priority");

        jLabel9.setText("Low Priority");

        txthpq3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txthpq3FocusLost(evt);
            }
        });

        txtmpq3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtmpq3FocusLost(evt);
            }
        });

        txtlpq3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtlpq3FocusLost(evt);
            }
        });

        btnSubmitq3.setText("Submit...");
        btnSubmitq3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitq3ActionPerformed(evt);
            }
        });

        txttotq3.setEditable(false);

        cmdgenqb.setText("CLICK HERE TO GENERATE");
        cmdgenqb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdgenqbActionPerformed(evt);
            }
        });

        cmp3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmp3FocusLost(evt);
            }
        });

        Opt3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                Opt3FocusLost(evt);
            }
        });

        jLabel16.setText("Compulsory");

        jLabel17.setText("Optional");

        jLabel18.setText("Total");

        jLabel21.setText("Question:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel18)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txttotq3, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnSubmitq3, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jLabel16)
                                .addComponent(jLabel17))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txthpq3, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                                .addComponent(txtmpq3)
                                .addComponent(txtlpq3)
                                .addComponent(Opt3)
                                .addComponent(cmp3))))
                    .addComponent(cmdgenqb, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jspaneq33, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txthpq3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtmpq3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtlpq3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Opt3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addGap(30, 30, 30)
                        .addComponent(btnSubmitq3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txttotq3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(26, 26, 26)
                        .addComponent(cmdgenqb, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jspaneq33, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Q NO 3", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitq3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitq3ActionPerformed
      try {
            // TODO add your handling code here:
            int hp3=0,mp3=0,lp3=0;
            hp3=Integer.parseInt(txthpq3.getText());
            mp3=Integer.parseInt(txtmpq3.getText());
            lp3=Integer.parseInt(txtlpq3.getText());
            System.out.println(subj);
            int tot=hp3+mp3+lp3;
            try {
                Class.forName("com.mysql.jdbc.Driver");  // MySQL database connection
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ComplexForm.class.getName()).log(Level.SEVERE, null, ex);
            }
              java.sql.Connection con =DriverManager.getConnection("jdbc:mysql://localhost:3306/login","root","");
            
            
            
            ResultSet rs=null;
            System.out.println("Phase 1");
             int zk=0;        
            int z=0;
            for(zk=0;zk<hp3;zk++) {
               z=0;
             PreparedStatement ps = con.prepareStatement("SELECT COUNT(*) AS CT FROM "+subj+"h_5");
             int ct=0;
             rs=ps.executeQuery();
              System.out.println("Phase 2");
             while(rs.next())
             {
                 ct=rs.getInt("CT");
                 System.out.println(ct);
             }
             System.out.println("Phase 2");
             int rnd=randInt(1,ct-1);   
             String strx[] = new String[ct];
             int qid[]=new int[ct];
             int marks[]=new int[ct];
             ps=con.prepareStatement("SELECT * FROM  "+subj+"h_5");
             rs=ps.executeQuery();
                         System.out.println("Phase 3");
             while(rs.next())
             {
                 strx[z]=rs.getString("QUESTION");
                 qid[z]=rs.getInt("ID");
                 marks[z]=rs.getInt("MARK");
                 z++;
             }
                //System.out.println("hello");
             ps=con.prepareStatement("INSERT INTO Temp(Q_id,MainQuestion,Question,Marks) VALUES(?,?,?,?)");
             ps.setInt(1, qid[rnd]);
             ps.setInt(2, 3);
             ps.setString(3, strx[rnd]);
             ps.setInt(4,marks[rnd]);
             ps.executeUpdate();
                            // System.out.println("hello1");

             
                         System.out.println("Phase 4");
        }
          
            
            
        for(zk=0;zk<mp3;zk++) {
             PreparedStatement ps = con.prepareStatement("SELECT COUNT(*) AS CT FROM "+subj+"m_5");
             int ct=0;
             z=0;
             rs=ps.executeQuery();
             while(rs.next())
             {
                 ct=rs.getInt("CT");
             }
             int rnd=randInt(1,ct-1);   
             String strx[] = new String[ct];
             int qid[]=new int[ct];
             int marks[]=new int[ct];
             ps=con.prepareStatement("SELECT * FROM "+subj+"m_5");
             rs=ps.executeQuery();
             while(rs.next())
             {
                 strx[z]=rs.getString("QUESTION");
                 qid[z]=rs.getInt("ID");
                 marks[z]=rs.getInt("MARK");
                 z++;
             }
             ps=con.prepareStatement("INSERT INTO Temp(Q_id,MainQuestion,Question,Marks) VALUES(?,?,?,?)");
             ps.setInt(1, qid[rnd]);
             ps.setInt(2, 3);
             ps.setString(3, strx[rnd]);
             ps.setInt(4,marks[rnd]);
             ps.executeUpdate();
             
             ps=con.prepareStatement("SELECT * FROM Temp WHERE MainQuestion=3");
             rs=ps.executeQuery();
             
        }    
        
        
        for(zk=0;zk<lp3;zk++) {
             PreparedStatement ps = con.prepareStatement("SELECT COUNT(*) AS CT FROM "+subj+"e_5");
             int ct=0;
             z=0;
             rs=ps.executeQuery();
             while(rs.next())
             {
                 ct=rs.getInt("CT");
             }
             int rnd=randInt(1,ct-1);   
             String strx[] = new String[ct];
             int qid[]=new int[ct];
             int marks[]=new int[ct];
             ps=con.prepareStatement("SELECT * FROM "+subj+"e_5");
             rs=ps.executeQuery();
             while(rs.next())
             {
                 strx[z]=rs.getString("QUESTION");
                 qid[z]=rs.getInt("ID");
                 marks[z]=rs.getInt("MARK");
                 z++;
             }
             ps=con.prepareStatement("INSERT INTO Temp(Q_id,MainQuestion,Question,Marks) VALUES(?,?,?,?)");
             ps.setInt(1, qid[rnd]);
             ps.setInt(2, 3);
             ps.setString(3, strx[rnd]);
             ps.setInt(4,marks[rnd]);
             ps.executeUpdate();
             ps=con.prepareStatement("SELECT * FROM Temp WHERE MainQuestion=3");
             rs=ps.executeQuery();
             ResultSetTable rtx=new ResultSetTable(rs);
             jspaneq33.setViewportView(rtx);
        }  
        JOptionPane.showMessageDialog(null, "Done. Generate QB");
        } catch (SQLException ex) {
            System.out.println(ex);
            Logger.getLogger(ComplexForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSubmitq3ActionPerformed

    private void txthpq1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txthpq1InputMethodTextChanged
        // TODO add your handling code here:
     
    }//GEN-LAST:event_txthpq1InputMethodTextChanged

    private void txthpq1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txthpq1FocusLost
        // TODO add your handling code here:
           int mk1=0,mk2=0,mk3=0,mk4=0;
        if(txthpq1.getText().equals(""))
            mk1=0;
        else
            mk1=Integer.parseInt(txthpq1.getText());
        
        if(txtmpq1.getText().equals(""))
            mk2=0;
        else
            mk2=Integer.parseInt(txtmpq1.getText());
        
        if(txtlpq1.getText().equals(""))
            mk3=0;
        else
            mk3=Integer.parseInt(txtlpq1.getText());
        int total=mk1+mk2+mk3;
        txttotq1.setText(String.valueOf(total));
    }//GEN-LAST:event_txthpq1FocusLost

    private void txthpq1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txthpq1FocusGained
        // TODO add your handling code here:
           int mk1=0,mk2=0,mk3=0,mk4=0;
        if(txthpq1.getText().equals(""))
            mk1=0;
        else
            mk1=Integer.parseInt(txthpq1.getText());
        
        if(txtmpq1.getText().equals(""))
            mk2=0;
        else
            mk2=Integer.parseInt(txtmpq1.getText());
        
        if(txtlpq1.getText().equals(""))
            mk3=0;
        else
            mk3=Integer.parseInt(txtlpq1.getText());
        int total=mk1+mk2+mk3;
        txttotq1.setText(String.valueOf(total));
    }//GEN-LAST:event_txthpq1FocusGained

    private void txtmpq1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtmpq1FocusGained
        // TODO add your handling code here:
           int mk1=0,mk2=0,mk3=0,mk4=0;
        if(txthpq1.getText().equals(""))
            mk1=0;
        else
            mk1=Integer.parseInt(txthpq1.getText());
        
        if(txtmpq1.getText().equals(""))
            mk2=0;
        else
            mk2=Integer.parseInt(txtmpq1.getText());
        
        if(txtlpq1.getText().equals(""))
            mk3=0;
        else
            mk3=Integer.parseInt(txtlpq1.getText());
        int total=mk1+mk2+mk3;
        txttotq1.setText(String.valueOf(total));
    }//GEN-LAST:event_txtmpq1FocusGained

    private void txtmpq1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtmpq1FocusLost
        // TODO add your handling code here:
           int mk1=0,mk2=0,mk3=0,mk4=0;
        if(txthpq1.getText().equals(""))
            mk1=0;
        else
            mk1=Integer.parseInt(txthpq1.getText());
        
        if(txtmpq1.getText().equals(""))
            mk2=0;
        else
            mk2=Integer.parseInt(txtmpq1.getText());
        
        if(txtlpq1.getText().equals(""))
            mk3=0;
        else
            mk3=Integer.parseInt(txtlpq1.getText());
        int total=mk1+mk2+mk3;
        txttotq1.setText(String.valueOf(total));
    }//GEN-LAST:event_txtmpq1FocusLost

    private void txtlpq1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtlpq1FocusGained
        // TODO add your handling code here:
           int mk1=0,mk2=0,mk3=0,mk4=0;
        if(txthpq1.getText().equals(""))
            mk1=0;
        else
            mk1=Integer.parseInt(txthpq1.getText());
        
        if(txtmpq1.getText().equals(""))
            mk2=0;
        else
            mk2=Integer.parseInt(txtmpq1.getText());
        
        if(txtlpq1.getText().equals(""))
            mk3=0;
        else
            mk3=Integer.parseInt(txtlpq1.getText());
        int total=mk1+mk2+mk3;
        txttotq1.setText(String.valueOf(total));
    }//GEN-LAST:event_txtlpq1FocusGained

    private void txtlpq1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtlpq1FocusLost
        // TODO add your handling code here:
           int mk1=0,mk2=0,mk3=0,mk4=0;
        if(txthpq1.getText().equals(""))
            mk1=0;
        else
            mk1=Integer.parseInt(txthpq1.getText());
        
        if(txtmpq1.getText().equals(""))
            mk2=0;
        else
            mk2=Integer.parseInt(txtmpq1.getText());
        
        if(txtlpq1.getText().equals(""))
            mk3=0;
        else
            mk3=Integer.parseInt(txtlpq1.getText());
        int total=mk1+mk2+mk3;
        txttotq1.setText(String.valueOf(total));
    }//GEN-LAST:event_txtlpq1FocusLost

    private void txthpq2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txthpq2FocusLost
        // TODO add your handling code here:
           int mk1=0,mk2=0,mk3=0,mk4=0;
        if(txthpq2.getText().equals(""))
            mk1=0;
        else
            mk1=Integer.parseInt(txthpq2.getText());
        
        if(txtmpq2.getText().equals(""))
            mk2=0;
        else
            mk2=Integer.parseInt(txtmpq2.getText());
        
        if(txtlpq2.getText().equals(""))
            mk3=0;
        else
            mk3=Integer.parseInt(txtlpq2.getText());
        int total=mk1+mk2+mk3;
        txttotq2.setText(String.valueOf(total));
    }//GEN-LAST:event_txthpq2FocusLost

    private void txtmpq2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtmpq2FocusLost
        // TODO add your handling code here:
                   int mk1=0,mk2=0,mk3=0,mk4=0;
        if(txthpq2.getText().equals(""))
            mk1=0;
        else
            mk1=Integer.parseInt(txthpq2.getText());
        
        if(txtmpq2.getText().equals(""))
            mk2=0;
        else
            mk2=Integer.parseInt(txtmpq2.getText());
        
        if(txtlpq2.getText().equals(""))
            mk3=0;
        else
            mk3=Integer.parseInt(txtlpq2.getText());
        int total=mk1+mk2+mk3;
        txttotq2.setText(String.valueOf(total));
    }//GEN-LAST:event_txtmpq2FocusLost

    private void txtlpq2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtlpq2FocusLost
        // TODO add your handling code here:
                   int mk1=0,mk2=0,mk3=0,mk4=0;
        if(txthpq2.getText().equals(""))
            mk1=0;
        else
            mk1=Integer.parseInt(txthpq2.getText());
        
        if(txtmpq2.getText().equals(""))
            mk2=0;
        else
            mk2=Integer.parseInt(txtmpq2.getText());
        
        if(txtlpq2.getText().equals(""))
            mk3=0;
        else
            mk3=Integer.parseInt(txtlpq2.getText());
        int total=mk1+mk2+mk3;
        txttotq2.setText(String.valueOf(total));
    }//GEN-LAST:event_txtlpq2FocusLost

    private void txthpq3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txthpq3FocusLost
        // TODO add your handling code here:
                   int mk1=0,mk2=0,mk3=0,mk4=0;
        if(txthpq3.getText().equals(""))
            mk1=0;
        else
            mk1=Integer.parseInt(txthpq3.getText());
        
        if(txtmpq3.getText().equals(""))
            mk2=0;
        else
            mk2=Integer.parseInt(txtmpq3.getText());
        
        if(txtlpq3.getText().equals(""))
            mk3=0;
        else
            mk3=Integer.parseInt(txtlpq3.getText());
        int total=mk1+mk2+mk3;
        txttotq3.setText(String.valueOf(total));
    }//GEN-LAST:event_txthpq3FocusLost

    private void txtmpq3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtmpq3FocusLost
        // TODO add your handling code here:
         int mk1=0,mk2=0,mk3=0,mk4=0;
        if(txthpq3.getText().equals(""))
            mk1=0;
        else
            mk1=Integer.parseInt(txthpq3.getText());
        
        if(txtmpq3.getText().equals(""))
            mk2=0;
        else
            mk2=Integer.parseInt(txtmpq3.getText());
        
        if(txtlpq3.getText().equals(""))
            mk3=0;
        else
            mk3=Integer.parseInt(txtlpq3.getText());
        int total=mk1+mk2+mk3;
        txttotq3.setText(String.valueOf(total));
    }//GEN-LAST:event_txtmpq3FocusLost

    private void txtlpq3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtlpq3FocusLost
        // TODO add your handling code here:
         int mk1=0,mk2=0,mk3=0,mk4=0;
        if(txthpq3.getText().equals(""))
            mk1=0;
        else
            mk1=Integer.parseInt(txthpq3.getText());
        
        if(txtmpq3.getText().equals(""))
            mk2=0;
        else
            mk2=Integer.parseInt(txtmpq3.getText());
        
        if(txtlpq3.getText().equals(""))
            mk3=0;
        else
            mk3=Integer.parseInt(txtlpq3.getText());
        int total=mk1+mk2+mk3;
        txttotq3.setText(String.valueOf(total));
    }//GEN-LAST:event_txtlpq3FocusLost

    private void cmdgenqbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdgenqbActionPerformed
        try {
            // TODO add your handling code here:
        String fldpth="";
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("Select Path");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
          System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
          System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
          fldpth=chooser.getSelectedFile().toString();
        } else {
          System.out.println("No Selection ");
          JOptionPane.showMessageDialog(null,"No option Selected");
          return;
        }
        int mark=(cmpp1*2)+(cmpp2*3)+(cmpp3*5);
        String marks=Integer.toString(mark);

             Document document = new Document();
            PdfWriter.getInstance(document,new FileOutputStream(fldpth+"/qpaper.pdf"));
            String filePath=fldpth+"/qpaper.pdf";
                 document.open();
            com.itextpdf.text.Image imgw = com.itextpdf.text.Image.getInstance(getClass().getResource("/resources/CHARUSAT1.png"));
            imgw.setAlignment(com.itextpdf.text.Image.ALIGN_LEFT|com.itextpdf.text.Image.TEXTWRAP);
            document.add(imgw);
             Paragraph pg = new Paragraph("                                         CHARUSAT UNIVERSITY\n"
                    + "                                                     B.TECH(IT)\n "
                    + "                                                  CHANGA -388 421\n"
                    + "                                                  ");
   String subjectsly="";
/*   if(subj.equals("Java"))
   subjectsly="Java Programming";
   
   else if(subj.equals("AWT"))
       subjectsly="Advanced Web Technology";
   
   else if(subj.equals("MAN"))
       subjectsly="Management";
   
   else if(subj.equals("ST"))
       subjectsly="Software Testing";*/
   pg.add("\n\nTime:"+t_h+"                                                                              Date:"+output);
   pg.add("\n\nSubject Name:"+subj+"("+sub_code+")"+"                                                         Marks:"+marks);
   pg.add("\n\n---------------------------------------------------------------------------------------------------------------");
   pg.add("\n\n\n\n");
   document.add(pg);
               PdfPTable table = new PdfPTable(4);
     Font font = new Font(Font.getFamily("TIMES_ROMAN").TIMES_ROMAN, 9);
          Font font1 = new Font(Font.getFamily("TIMES_ROMAN").TIMES_ROMAN, 12);
    PdfPCell cell =new PdfPCell(new Paragraph("Q NO. 1",font));
    cell.setBorder(Rectangle.NO_BORDER);
    PdfPCell cell2 = new PdfPCell(new Paragraph("ATTEMPT ANY "+cmpp1+" QUESTIONS FROM THE FOLLOWING",font));
    cell2.setBorder(Rectangle.NO_BORDER);
    cell2.setColspan(2);
    PdfPCell cell3 = new PdfPCell(new Paragraph("                      Marks",font));
    cell3.setBorder(Rectangle.NO_BORDER);
    table.addCell(cell);
    table.addCell(cell2);
    table.addCell(cell3);
     //table.addCell();
            try {
                Class.forName("com.mysql.jdbc.Driver");  // MySQL database connection
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ComplexForm.class.getName()).log(Level.SEVERE, null, ex);
            }

                java.sql.Connection con =DriverManager.getConnection("jdbc:mysql://localhost:3306/login","root","");
          
            ResultSet rs=null;
            
            PreparedStatement ps = con.prepareStatement("SELECT COUNT(*) AS CTX FROM Temp WHERE MainQuestion=1");
            rs=ps.executeQuery();
            int ctx=0;
            while(rs.next())
            {
                ctx=rs.getInt("CTX");
            }
       int mkw=0,mqq=0;
       String qesu="";
         PdfPCell mqcell[]=new PdfPCell[ctx];
         PdfPCell qcell[]= new PdfPCell[ctx];
         PdfPCell mkcell[]=new PdfPCell[ctx];
         int ix=0,ct=1;
         ps = con.prepareStatement("SELECT * FROM Temp WHERE MainQuestion=1");
         rs=ps.executeQuery();
         while(rs.next())
         {
            // mkw=rs.getInt();
             mqcell[ix]= new PdfPCell(new Paragraph(String.valueOf(ct),font));
             mqcell[ix].setBorder(Rectangle.NO_BORDER);
             qesu=rs.getString("Question");
             qcell[ix]=new PdfPCell(new Paragraph(qesu,font));
             qcell[ix].setBorder(Rectangle.NO_BORDER);
             qcell[ix].setColspan(2);
             mkw=rs.getInt("Marks");
             mkcell[ix]=new PdfPCell(new Paragraph("                         "+String.valueOf(mkw),font));
             mkcell[ix].setBorder(Rectangle.NO_BORDER);
             table.addCell(mqcell[ix]);
             table.addCell(qcell[ix]);
             table.addCell(mkcell[ix]);
             ct++;
             ix++;
         }
        
     document.add(table);           
    document.add(new Paragraph("\n\n"));
  
    
    
    
    PdfPTable table2 = new PdfPTable(4);
    PdfPCell cellx1 =new PdfPCell(new Paragraph("Q NO. 2",font));
    cellx1.setBorder(Rectangle.NO_BORDER);
    PdfPCell cellx2 = new PdfPCell(new Paragraph("ATTEMPT ANY "+cmpp2+" QUESTIONS FROM THE FOLLOWING",font));
    cellx2.setBorder(Rectangle.NO_BORDER);
    cellx2.setColspan(2);
    PdfPCell cellx3 = new PdfPCell(new Paragraph("                      Marks",font));
    cellx3.setBorder(Rectangle.NO_BORDER);
    table2.addCell(cellx1);
    table2.addCell(cellx2);
    table2.addCell(cellx3);
     //table.addCell();
      rs=null;
                  
            ps = con.prepareStatement("SELECT COUNT(*) AS CTX FROM Temp WHERE MainQuestion=2");
            rs=ps.executeQuery();
            ctx=0;
            while(rs.next())
            {
                ctx=rs.getInt("CTX");
            }
       mkw=0;
       mqq=0;
        qesu="";
         PdfPCell mqcell2[]=new PdfPCell[ctx];
         PdfPCell qcell2[]= new PdfPCell[ctx];
         PdfPCell mkcell2[]=new PdfPCell[ctx];
         ix=0;
         ct=1;
         ps = con.prepareStatement("SELECT * FROM Temp WHERE MainQuestion=2");
         rs=ps.executeQuery();
         while(rs.next())
         {
            // mkw=rs.getInt();
             mqcell2[ix]= new PdfPCell(new Paragraph(String.valueOf(ct),font));
             mqcell2[ix].setBorder(Rectangle.NO_BORDER);
             qesu=rs.getString("Question");
             qcell2[ix]=new PdfPCell(new Paragraph(qesu,font));
             qcell2[ix].setBorder(Rectangle.NO_BORDER);
             qcell2[ix].setColspan(2);
             mkw=rs.getInt("Marks");
             mkcell2[ix]=new PdfPCell(new Paragraph("                         "+String.valueOf(mkw),font));
             mkcell2[ix].setBorder(Rectangle.NO_BORDER);
             table2.addCell(mqcell2[ix]);
             table2.addCell(qcell2[ix]);
             table2.addCell(mkcell2[ix]);
             ct++;
             ix++;
         }

    
    document.add(table2);
    document.add(new Paragraph("\n\n\n"));
    
        PdfPTable table3 = new PdfPTable(4);
    PdfPCell celly1 =new PdfPCell(new Paragraph("Q NO. 3",font));
    celly1.setBorder(Rectangle.NO_BORDER);
    PdfPCell celly2 = new PdfPCell(new Paragraph("ATTEMPT ANY "+cmpp3+" QUESTIONS FROM THE FOLLOWING",font));
    celly2.setBorder(Rectangle.NO_BORDER);
    celly2.setColspan(2);
    PdfPCell celly3 = new PdfPCell(new Paragraph("                      Marks",font));
    celly3.setBorder(Rectangle.NO_BORDER);
    table3.addCell(celly1);
    table3.addCell(celly2);
    table3.addCell(celly3);
     //table.addCell();
      rs=null;
                  
             ps = con.prepareStatement("SELECT COUNT(*) AS CTX FROM Temp WHERE MainQuestion=3");
            rs=ps.executeQuery();
            ctx=0;
            while(rs.next())
            {
                ctx=rs.getInt("CTX");
            }
       mkw=0;
       mqq=0;
        qesu="";
         PdfPCell mqcell3[]=new PdfPCell[ctx];
         PdfPCell qcell3[]= new PdfPCell[ctx];
         PdfPCell mkcell3[]=new PdfPCell[ctx];
         ix=0;
         ct=1;
         ps = con.prepareStatement("SELECT * FROM Temp WHERE MainQuestion=3");
         rs=ps.executeQuery();
         while(rs.next())
         {
            // mkw=rs.getInt();
             mqcell3[ix]= new PdfPCell(new Paragraph(String.valueOf(ct),font));
             mqcell3[ix].setBorder(Rectangle.NO_BORDER);
             qesu=rs.getString("Question");
             qcell3[ix]=new PdfPCell(new Paragraph(qesu,font));
             qcell3[ix].setBorder(Rectangle.NO_BORDER);
             qcell3[ix].setColspan(2);
             mkw=rs.getInt("Marks");
             mkcell3[ix]=new PdfPCell(new Paragraph("                         "+String.valueOf(mkw),font));
             mkcell3[ix].setBorder(Rectangle.NO_BORDER);
             table3.addCell(mqcell3[ix]);
             table3.addCell(qcell3[ix]);
             table3.addCell(mkcell3[ix]);
             ct++;
             ix++;
         }

    
    document.add(table3);
    
    
    
    JOptionPane.showMessageDialog(null, "PDF Generated");
    document.close();

    // build a controller
    SwingController controller = new SwingController();

    // Build a SwingViewFactory configured with the controller
    SwingViewBuilder factory = new SwingViewBuilder(controller);

    // Use the factory to build a JPanel that is pre-configured
    //with a complete, active Viewer UI.
    JPanel viewerComponentPanel = factory.buildViewerPanel();

    // add copy keyboard command
    ComponentKeyBinding.install(controller, viewerComponentPanel);

    // add interactive mouse link annotation support via callback
    controller.getDocumentViewController().setAnnotationCallback(
          new org.icepdf.ri.common.MyAnnotationCallback(
                 controller.getDocumentViewController()));

    // Create a JFrame to display the panel in
    JFrame window = new JFrame("Report Viewer");
     Image icx = new ImageIcon(getClass().getResource("/resources/question_mark-icon.jpg")).getImage();
            window.setIconImage(icx);
            
     try {
    UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
    SwingUtilities.updateComponentTreeUI(window);
    //SwingUtilities.updateComponentTreeUI(viewerComponentPanel);

    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException exception) {
    JOptionPane.showMessageDialog (
    this, "Can't change look and feel",
    "Invalid PLAF", JOptionPane.ERROR_MESSAGE);
    }
    window.getContentPane().add(viewerComponentPanel);
    window.pack();
    window.setVisible(true);

    // Open a PDF document to view
    controller.openDocument(filePath);
        } catch (SQLException ex) {
            Logger.getLogger(ComplexForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BadElementException ex) {
            Logger.getLogger(ComplexForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(ComplexForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ComplexForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(ComplexForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmdgenqbActionPerformed

    private void btnSubmitq1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitq1ActionPerformed
        try {
            // TODO add your handling code here:
            int hp1=0,mp1=0,lp1=0;
            hp1=Integer.parseInt(txthpq1.getText());
            mp1=Integer.parseInt(txtmpq1.getText());
            lp1=Integer.parseInt(txtlpq1.getText());
            System.out.println(subj);
            int tot=hp1+mp1+lp1;
            try {
                Class.forName("com.mysql.jdbc.Driver");  // MySQL database connection
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ComplexForm.class.getName()).log(Level.SEVERE, null, ex);
            }
              java.sql.Connection con =DriverManager.getConnection("jdbc:mysql://localhost:3306/login","root","");
            
            
            
            ResultSet rs=null;
            System.out.println("Phase 1");
             int zk=0;        
            int z=0;
            for(zk=0;zk<hp1;zk++) {
               z=0;
             PreparedStatement ps = con.prepareStatement("SELECT COUNT(*) AS CT FROM "+subj+"h_2");
             int ct=0;
             rs=ps.executeQuery();
              System.out.println("Phase 2");
             while(rs.next())
             {
                 ct=rs.getInt("CT");
                 System.out.println(ct);
             }
             System.out.println("Phase 2");
             int rnd=randInt(1,ct-1);   
             String strx[] = new String[ct];
             int qid[]=new int[ct];
             int marks[]=new int[ct];
             ps=con.prepareStatement("SELECT * FROM  "+subj+"h_2");
             rs=ps.executeQuery();
                         System.out.println("Phase 3");
             while(rs.next())
             {
                 strx[z]=rs.getString("QUESTION");
                 qid[z]=rs.getInt("ID");
                 marks[z]=rs.getInt("MARK");
                 z++;
             }
                System.out.println("hello");
             ps=con.prepareStatement("INSERT INTO Temp(Q_id,MainQuestion,Question,Marks) VALUES(?,?,?,?)");
             ps.setInt(1, qid[rnd]);
             ps.setInt(2, 1);
             ps.setString(3, strx[rnd]);
             ps.setInt(4,marks[rnd]);
             ps.executeUpdate();
                             System.out.println("hello1");

             ps=con.prepareStatement("SELECT * FROM Temp WHERE MainQuestion=1");
             rs=ps.executeQuery();
                         System.out.println("Phase 4");
        }
          
            
            
        for(zk=0;zk<mp1;zk++) {
             PreparedStatement ps = con.prepareStatement("SELECT COUNT(*) AS CT FROM "+subj+"m_2");
             int ct=0;
             z=0;
             rs=ps.executeQuery();
             while(rs.next())
             {
                 ct=rs.getInt("CT");
             }
             int rnd=randInt(1,ct-1);   
             String strx[] = new String[ct];
             int qid[]=new int[ct];
             int marks[]=new int[ct];
             ps=con.prepareStatement("SELECT * FROM "+subj+"m_2");
             rs=ps.executeQuery();
             while(rs.next())
             {
                 strx[z]=rs.getString("QUESTION");
                 qid[z]=rs.getInt("ID");
                 marks[z]=rs.getInt("MARK");
                 z++;
             }
             ps=con.prepareStatement("INSERT INTO Temp(Q_id,MainQuestion,Question,Marks) VALUES(?,?,?,?)");
             ps.setInt(1, qid[rnd]);
             ps.setInt(2, 1);
             ps.setString(3, strx[rnd]);
             ps.setInt(4,marks[rnd]);
             ps.executeUpdate();
             
             ps=con.prepareStatement("SELECT * FROM Temp WHERE MainQuestion=1");
             rs=ps.executeQuery();
         }    
        
        
        for(zk=0;zk<lp1;zk++) {
             PreparedStatement ps = con.prepareStatement("SELECT COUNT(*) AS CT FROM "+subj+"e_2");
             int ct=0;
             z=0;
             rs=ps.executeQuery();
             while(rs.next())
             {
                 ct=rs.getInt("CT");
             }
             int rnd=randInt(1,ct-1);   
             String strx[] = new String[ct];
             int qid[]=new int[ct];
             int marks[]=new int[ct];
             ps=con.prepareStatement("SELECT * FROM "+subj+"e_2");
             rs=ps.executeQuery();
             while(rs.next())
             {
                 strx[z]=rs.getString("QUESTION");
                 qid[z]=rs.getInt("ID");
                 marks[z]=rs.getInt("MARK");
                 z++;
             }
             ps=con.prepareStatement("INSERT INTO Temp(Q_id,MainQuestion,Question,Marks) VALUES(?,?,?,?)");
             ps.setInt(1, qid[rnd]);
             ps.setInt(2, 1);
             ps.setString(3, strx[rnd]);
             ps.setInt(4,marks[rnd]);
             ps.executeUpdate();
             ps=con.prepareStatement("SELECT * FROM Temp WHERE MainQuestion=1");
             rs=ps.executeQuery();
             ResultSetTable rtx=new ResultSetTable(rs);
             jspaneq13.setViewportView(rtx);
        }
        
        JOptionPane.showMessageDialog(null, "Done. Goto question 2");
        } catch (SQLException ex) {
            System.out.println(ex);
            Logger.getLogger(ComplexForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSubmitq1ActionPerformed

    private void btnSubmitq2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitq2ActionPerformed
     try {
            // TODO add your handling code here:
           int hp2=0,mp2=0,lp2=0;
            hp2=Integer.parseInt(txthpq2.getText());
            mp2=Integer.parseInt(txtmpq2.getText());
            lp2=Integer.parseInt(txtlpq2.getText());
            System.out.println(subj);
            int tot=hp2+mp2+lp2;
            try {
                Class.forName("com.mysql.jdbc.Driver");  // MySQL database connection
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ComplexForm.class.getName()).log(Level.SEVERE, null, ex);
            }
              java.sql.Connection con =DriverManager.getConnection("jdbc:mysql://localhost:3306/login","root","");
            
            
            
            ResultSet rs=null;
            System.out.println("Phase 1");
             int zk=0;        
            int z=0;
            for(zk=0;zk<hp2;zk++) {
               z=0;
             PreparedStatement ps = con.prepareStatement("SELECT COUNT(*) AS CT FROM "+subj+"h_3");
             int ct=0;
             rs=ps.executeQuery();
              System.out.println("Phase 2");
             while(rs.next())
             {
                 ct=rs.getInt("CT");
                 System.out.println(ct);
             }
             System.out.println("Phase 2");
             int rnd=randInt(1,ct-1);   
             String strx[] = new String[ct];
             int qid[]=new int[ct];
             int marks[]=new int[ct];
             ps=con.prepareStatement("SELECT * FROM  "+subj+"h_3");
             rs=ps.executeQuery();
                         System.out.println("Phase 3");
             while(rs.next())
             {
                 strx[z]=rs.getString("QUESTION");
                 qid[z]=rs.getInt("ID");
                 marks[z]=rs.getInt("MARK");
                 z++;
             }
                System.out.println("hello");
             ps=con.prepareStatement("INSERT INTO Temp(Q_id,MainQuestion,Question,Marks) VALUES(?,?,?,?)");
             ps.setInt(1, qid[rnd]);
             ps.setInt(2, 2);
             ps.setString(3, strx[rnd]);
             ps.setInt(4,marks[rnd]);
             ps.executeUpdate();
                             System.out.println("hello1");

             ps=con.prepareStatement("SELECT * FROM Temp WHERE MainQuestion=2");
             rs=ps.executeQuery();
             
                         System.out.println("Phase 4");
        }
          
            
            
        for(zk=0;zk<mp2;zk++) {
             PreparedStatement ps = con.prepareStatement("SELECT COUNT(*) AS CT FROM "+subj+"m_3");
             int ct=0;
             z=0;
             rs=ps.executeQuery();
             while(rs.next())
             {
                 ct=rs.getInt("CT");
             }
             int rnd=randInt(1,ct-1);   
             String strx[] = new String[ct];
             int qid[]=new int[ct];
             int marks[]=new int[ct];
             ps=con.prepareStatement("SELECT * FROM "+subj+"m_3");
             rs=ps.executeQuery();
             while(rs.next())
             {
                 strx[z]=rs.getString("QUESTION");
                 qid[z]=rs.getInt("ID");
                 marks[z]=rs.getInt("MARK");
                 z++;
             }
             ps=con.prepareStatement("INSERT INTO Temp(Q_id,MainQuestion,Question,Marks) VALUES(?,?,?,?)");
             ps.setInt(1, qid[rnd]);
             ps.setInt(2, 2);
             ps.setString(3, strx[rnd]);
             ps.setInt(4,marks[rnd]);
             ps.executeUpdate();
             
             ps=con.prepareStatement("SELECT * FROM Temp WHERE MainQuestion=2");
             rs=ps.executeQuery();
             
        }    
        
        
        for(zk=0;zk<lp2;zk++) {
             PreparedStatement ps = con.prepareStatement("SELECT COUNT(*) AS CT FROM "+subj+"e_3");
             int ct=0;
             z=0;
             rs=ps.executeQuery();
             while(rs.next())
             {
                 ct=rs.getInt("CT");
             }
             int rnd=randInt(1,ct-1);   
             String strx[] = new String[ct];
             int qid[]=new int[ct];
             int marks[]=new int[ct];
             ps=con.prepareStatement("SELECT * FROM "+subj+"e_3");
             rs=ps.executeQuery();
             while(rs.next())
             {
                 strx[z]=rs.getString("QUESTION");
                 qid[z]=rs.getInt("ID");
                 marks[z]=rs.getInt("MARK");
                 z++;
             }
             ps=con.prepareStatement("INSERT INTO Temp(Q_id,MainQuestion,Question,Marks) VALUES(?,?,?,?)");
             ps.setInt(1, qid[rnd]);
             ps.setInt(2, 2);
             ps.setString(3, strx[rnd]);
             ps.setInt(4,marks[rnd]);
             ps.executeUpdate();
             ps=con.prepareStatement("SELECT * FROM Temp WHERE MainQuestion=2");
             rs=ps.executeQuery();
             ResultSetTable rtx=new ResultSetTable(rs);
             jspaneq23.setViewportView(rtx);
        }
        JOptionPane.showMessageDialog(null, "Done. Proceed to Question 3");
        
        } catch (SQLException ex) {
            System.out.println(ex);
            Logger.getLogger(ComplexForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSubmitq2ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        
           
    }//GEN-LAST:event_formWindowActivated

    private void Opt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Opt1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Opt1ActionPerformed

    private void cmp1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmp1FocusLost
       /* int x=Integer.parseInt(txttotq1.getText());
        int y=Integer.parseInt(cmp1.getText());
        int z=Integer.parseInt(Opt1.getText());
         if(x<(y+z) || x>(y+z))
         {
             cmp1.setText("");
             Opt1.setText("");
             JOptionPane.showMessageDialog(null, "Value of subquestion should be equal to sum of Options and Compulsory Attempt");**/{
         }        }//GEN-LAST:event_cmp1FocusLost

    private void Opt1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Opt1FocusLost
int x=Integer.parseInt(txttotq1.getText());
        int y=Integer.parseInt(cmp1.getText());
        int z=Integer.parseInt(Opt1.getText());
         if(x<(y+z) || x>(y+z))
         {
             cmp1.setText("");
             Opt1.setText("");
             JOptionPane.showMessageDialog(null, "Value of subquestion should be equal to sum of Options and Compulsory Attempt");
         }
         cmpp1=y;
             {
         }        }//GEN-LAST:event_Opt1FocusLost

    private void cmp2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmp2FocusLost
         /* int x=Integer.parseInt(txttotq2.getText());
        int y=Integer.parseInt(cmp2.getText());
        int z=Integer.parseInt(Opt2.getText());
         if(x<(y+z) || x>(y+z))
         {
             cmp2.setText("");
             Opt2.setText("");
             JOptionPane.showMessageDialog(null, "Value of subquestion should be equal to sum of Options and Compulsory Attempt");
        */{
         }        }//GEN-LAST:event_cmp2FocusLost

    private void Opt2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Opt2FocusLost
int x=Integer.parseInt(txttotq2.getText());
        int y=Integer.parseInt(cmp2.getText());
        int z=Integer.parseInt(Opt2.getText());
         if(x<(y+z) || x>(y+z))
         {
             cmp2.setText("");
             Opt2.setText("");
             JOptionPane.showMessageDialog(null, "Value of subquestion should be equal to sum of Options and Compulsory Attempt");
         }
         cmpp2=y;
             {
         }       }//GEN-LAST:event_Opt2FocusLost

    private void cmp3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmp3FocusLost
/*int x=Integer.parseInt(txttotq3.getText());
        int y=Integer.parseInt(cmp3.getText());
        int z=Integer.parseInt(Opt3.getText());
         if(x<(y+z) || x>(y+z))
         {
             cmp3.setText("");
             Opt3.setText("");
             JOptionPane.showMessageDialog(null, "Value of subquestion should be equal to sum of Options and Compulsory Attempt");
         }  */
     }//GEN-LAST:event_cmp3FocusLost

    private void Opt3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Opt3FocusLost
int x=Integer.parseInt(txttotq3.getText());
        int y=Integer.parseInt(cmp3.getText());
        int z=Integer.parseInt(Opt3.getText());
         if(x<(y+z) || x>(y+z))
         {
             cmp3.setText("");
             Opt3.setText("");
             JOptionPane.showMessageDialog(null, "Value of subquestion should be equal to sum of Options and Compulsory Attempt");
         }
         cmpp3=y;
         {
         }       }//GEN-LAST:event_Opt3FocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        Q_Pt pf = new Q_Pt();
        pf.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtlpq1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtlpq1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtlpq1ActionPerformed

    private void txtmpq1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmpq1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmpq1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        ProjectForm pf = new ProjectForm();
        pf.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ComplexForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ComplexForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ComplexForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ComplexForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ComplexForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Opt1;
    private javax.swing.JTextField Opt2;
    private javax.swing.JTextField Opt3;
    private javax.swing.JButton btnSubmitq1;
    private javax.swing.JButton btnSubmitq2;
    private javax.swing.JButton btnSubmitq3;
    private javax.swing.JButton cmdgenqb;
    private javax.swing.JTextField cmp1;
    private javax.swing.JTextField cmp2;
    private javax.swing.JTextField cmp3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JScrollPane jspaneq13;
    private javax.swing.JScrollPane jspaneq23;
    private javax.swing.JScrollPane jspaneq33;
    private javax.swing.JTextField txthpq1;
    private javax.swing.JTextField txthpq2;
    private javax.swing.JTextField txthpq3;
    private javax.swing.JTextField txtlpq1;
    private javax.swing.JTextField txtlpq2;
    private javax.swing.JTextField txtlpq3;
    private javax.swing.JTextField txtmpq1;
    private javax.swing.JTextField txtmpq2;
    private javax.swing.JTextField txtmpq3;
    private javax.swing.JTextField txttotq1;
    private javax.swing.JTextField txttotq2;
    private javax.swing.JTextField txttotq3;
    // End of variables declaration//GEN-END:variables
}
